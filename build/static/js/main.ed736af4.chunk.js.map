{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Clock","props","state","counterLength","sessionLength","breakLength","timeLeft","minutes","seconds","timerStatus","timerType","timerControl","bind","reset","breakDecrement","breakIncrement","sessionDecrement","sessionIncrement","addZero","breakStart","sessionStart","breakCounter","this","newBreakLength","setState","newSessionLength","clearInterval","timer","breakTimer","setInterval","beep","play","load","value","slice","class","id","onClick","ref","src","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed736af4.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nfunction App () {\n  return ( \n    <Clock />\n  );\n}\n\nclass Clock extends React.Component {\n  \n  constructor (props) {\n    super(props);\n    \n    this.state = {\n      counterLength: 600,\n      sessionLength: 25,\n      breakLength: 5,\n      timeLeft: '25:00',\n      minutes: 25,\n      seconds: 0,\n      timerStatus: '',\n      timerType: 'Session'\n    }\n    \n    this.timerControl = this.timerControl.bind(this);\n    this.reset = this.reset.bind(this);\n    this.breakDecrement = this.breakDecrement.bind(this);     \n    this.breakIncrement = this.breakIncrement.bind(this);  \n    this.sessionDecrement = this.sessionDecrement.bind(this);     \n    this.sessionIncrement = this.sessionIncrement.bind(this);  \n    this.addZero = this.addZero.bind(this);\n    this.breakStart = this.breakStart.bind(this);\n    this.sessionStart = this.sessionStart.bind(this);\n    this.breakCounter = this.breakCounter.bind(this);\n  }\n   \n  breakDecrement () {\n    if (this.state.timerStatus == 'running'  || this.state.timerStatus == 'paused') { return };\n    const { breakLength } = this.state;    \n    let newBreakLength = breakLength - 1;\n    if (breakLength > 1) {\n      this.setState({\n          breakLength: newBreakLength\n      });\n    }\n  }\n  \n  breakIncrement () {\n    if (this.state.timerStatus == 'running'  || this.state.timerStatus == 'paused') { return };\n    const { breakLength } = this.state;\n    let newBreakLength = breakLength + 1;\n    if (breakLength < 60) {\n      this.setState({\n          breakLength: newBreakLength\n      });\n    }\n  }\n\n  sessionDecrement () {\n    if (this.state.timerStatus == 'running' || this.state.timerStatus == 'paused') { return };\n    const { sessionLength, minutes } = this.state;    \n    let newSessionLength = sessionLength - 1;\n    if (sessionLength > 1) {\n      this.setState({\n          sessionLength: newSessionLength,\n          minutes: newSessionLength,\n      });\n    }\n  }\n  \n  sessionIncrement () {\n    if (this.state.timerStatus == 'running' || this.state.timerStatus == 'paused') { return };\n    const { sessionLength, minutes } = this.state;\n    let newSessionLength = sessionLength + 1;\n    if (sessionLength < 60) {\n      this.setState({\n          sessionLength: newSessionLength,\n          minutes: newSessionLength,\n      });\n    }\n  }\n  \n   timerControl () { \n     if (this.state.timerStatus === 'running') {\n      clearInterval(this.timer);\n      clearInterval(this.breakTimer); \n      this.setState({\n        timerStatus: 'paused',\n      })\n      return;\n     } else {\n        this.setState({\n          timerStatus: 'running'\n        });\n     }\n     \n     if (this.state.timerType === 'Session') {\n       this.timer = setInterval(() => this.sessionStart(), 1000);\n     } else if (this.state.timerType === 'Break') {\n       \n     }\n     \n     \n   }\n                         \n  sessionStart () {\n    const { seconds, minutes } = this.state\n  \n    if (seconds > 0) {\n        this.setState(({ seconds }) => ({\n            seconds: seconds - 1\n        }))\n      \n\n    }\n    if (seconds === 0) {\n      let minutesDisplay = this.addZero(minutes);\n      let secondsDisplay = '00'\n        if (minutes === 0) {\n            beep.play();\n            clearInterval(this.timer)\n            this.setState({\n              timerStatus: ''\n            });\n            this.breakStart();\n        } else {\n            this.setState(({ minutes }) => ({\n                minutes: minutes - 1,\n                seconds: 59\n            }))\n        }\n    } \n  }      \n\n  breakStart () {\n   let minutes = this.state.breakLength; \n   this.setState({\n      timerType: 'Break',\n      timerStatus: 'running',\n      minutes: minutes\n   });\n     \n     this.breakTimer = setInterval(() => this.breakCounter(), 1000);\n       \n  }\n  \n  breakCounter () {\n    const { seconds, minutes } = this.state     \n      \n            if (seconds > 0) {\n                this.setState(({ seconds }) => ({\n                    seconds: seconds - 1\n                }))\n              \n            }\n            if (seconds === 0) {\n              let minutesDisplay = this.addZero(minutes);\n              let secondsDisplay = '00'\n                if (minutes === 0) {\n                    beep.play();\n                    clearInterval(this.breakTimer);\n                    let sessionLength = this.state.sessionLength\n                    this.setState({\n                      timerType: 'Session',\n                      seconds: 0,\n                      minutes: sessionLength,\n                      timerStatus: ''\n                    });\n         \n                    this.timerControl();\n                } else {\n                    this.setState(({ minutes }) => ({\n                        minutes: minutes - 1,\n                        seconds: 59\n                    }))\n                }\n            } \n        }\n  \n  reset () {\n    clearInterval(this.timer);\n    clearInterval(this.breakTimer);\n    beep.load();\n    this.setState({\n      breakLength: 5,\n      sessionLength: 25,\n      minutes: 25,\n      seconds: 0,\n      timerStatus: '',\n      timerType: 'Session'\n    })\n  }\n\n   addZero (value) {\n     return (\"0\" + value).slice(-2);\n   }\n\n  render () {\n    \n    return (\n      <div class=\"container\">\n        \n      <h1 class=\"container-heading\">25+5 Clock</h1>\n      \n      <div class=\"controls\">\n        <div>\n          <h2 id=\"break-label\" class=\"controls-header\">Break Length</h2>\n        <div class=\"controls-inner\">\n          <div>\n            <button class=\"button button-increment\" id=\"break-decrement\" onClick={this.breakDecrement}>\n            <i class=\"fa fa-arrow-down fa-2x\"></i>\n            </button>\n          </div>\n          <div>\n            <p id=\"break-length\" class=\"controls-inner-length\">{this.state.breakLength}</p>\n          </div>\n          <div>\n            <button class=\"button button-increment\" id=\"break-increment\" onClick={this.breakIncrement}>\n            <i class=\"fa fa-arrow-up fa-2x\"></i>\n            </button>\n          </div>\n        </div>\n        </div>\n      \n      <div>\n        <h2 id=\"session-label\" class=\"controls-header\">Session Length</h2>\n                <div class=\"controls-inner\">\n        <div>\n          <button class=\"button button-increment\" id=\"session-decrement\" onClick={this.sessionDecrement}>\n          <i class=\"fa fa-arrow-down fa-2x\"></i>\n          </button>\n        </div>\n        <div>\n          <p id=\"session-length\" class=\"controls-inner-length\">{this.state.sessionLength}</p>\n        </div>\n        <div>\n          <button class=\"button button-increment\" id=\"session-increment\" onClick={this.sessionIncrement}>\n          <i class=\"fa fa-arrow-up fa-2x\"></i>\n          </button>\n        </div>\n      </div>       \n        </div>\n        </div>\n\n        <div class=\"session-container\">\n          <h3 id=\"timer-label\" class=\"session-container-header\">{this.state.timerType}</h3>\n      \n          <div id=\"time-left\" class=\"session-container-timer\">\n            \n            { this.state.minutes < 10 ? '0' + this.state.minutes : this.state.minutes}:{this.state.seconds < 10 ? '0' + this.state.seconds : this.state.seconds}\n            </div>\n         \n          <div class=\"session-container-controls\">\n            \n          <button class=\"button button-start-stop\" id=\"start_stop\" onClick={this.timerControl}>\n            <i class=\"fa fa-play fa-2x\"></i>\n            <i class=\"fa fa-pause fa-2x\"></i>\n          </button>\n        \n          <button class=\"button button-start-stop\" id=\"reset\" onClick={this.reset}>\n            <i class=\"fa fa-refresh fa-2x\"></i>  \n          </button>\n        \n          <audio ref=\"beepSound\" id=\"beep\" src=\"http://d-gun.com/files/sounds/RADAR1.WAV\" />\n          </div>\n         </div>\n       </div>\n    )\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}